/*
fun main() {
   //exercício: fazer um diálogo de mínimo 10 linhas usando a declaração println()
   //
   println("Proletário_ O que é socialismo?")
   println("Karl Marx_ O Socialismo é a fase de Transição para o Comunismo")
   println("Proletário_ Ok, mas e o comunismo? O que é?")
   println("Karl Marx_ O Comunismo nada mais é que a socialização dos meios de produção, extinção das classes e do estado.")
   println("Proletário_ Certo, agora explique o socialismo.")
   println("Karl Marx_ Sendo o Socialismo a etapa de transição para o Comunismo, a burguesia, que são os patrões, devem deixar de existir.")
   println("Karl Marx_ E para isso, o proletariado deve se organizar em partidos ou sindicatos revolucionários.")
   println("Proletário_ E depois disso? Qual é a nossa missão?")
   println("Karl Marx_ Com os trabalhadores unidos, o objetivo é tomar os meios de produção e mudar o caráter do estado, sem a burguesia.")
   println("Proletário_ Então, como disse o próprio manifesto comunista: Proletários de todos os países, uni-vos!")
   
//-------------------------------------------------------------------------------------------------------------------------------------------------
   //Tipos de variáveis: 
    //
    //String - armazena valores de tipo texto - dentro de ""  ==> ex: "abóbora" 
    //Int - armazena números inteiros ==> 7042
    //Float - armazena números reais (no geral) - necessita de um f no valor ==>72.24f
    //Double - armazena números quebrados(de forma arredondada) ==> 7.15
    //Long - armazena números longos ==> 54564386546546.784486
    //Boolean - verdadeiro ou falso ==> true, false
    /*
    var cr7 = "Cristiano Ronaldo" 
    var numeroChampions = 5 
    var altura = 1.87
    
    //Concatenação
    
    print("O nome dele é " + cr7 + ", ele tem " + numeroChampions)
    println(" titúlos de Champions League e ele tem " + altura + " de altura SIIIIUU eu sou u miliorr")
    
    var laPulga = "Lionel Messi"
    var champions = 4
    var alturaDele = 1.02
    
    print("O nome dele é $laPulga, ele tem $champions títulos de chamions, ")
    println("e ele tem apenas $alturaDele de altura")
    */
    //Faça uma apresentação de si mesmo, usando no mínimo 
    //5 variáveis e usando o método de concatenação
    /*
    val nome = "José"
    val sobrenome = "Nestor"
    val dia = 5 
    val mes = "junho"
    val ano = "1575 a.C." 
    
    println("Olá, meu jovem, meu nome é $nome  $sobrenome e eu nasci no dia $dia de $mes de $ano")
    */
    
    //Operadores matemáticos
    //
    // + => adição
    // - => subtração
    // / => divisão
    // * => multiplicação
    // % => módulo - o resto de uma divisão
    
    //println(15 % 2) 
    //
    //Operadores Relacionais 
    //
    //
    // == => igual a...
    // != => diferente de...
    // > => maior que... 
    // < => menor que...
    // >= -> maior ou igual a...
    // <= -> menor ou igual a...
    
    
    
    
    
}

*/
//------------------------------------------------------------------------------------------------------------
fun main() {
    var n1 = 2
    var n2 = 5
    println("*************-------------*************")
    println("**                                   **")
    println("**                                   **")
    println("**A Adição de 5 mais 5 é " + (n2 + n2))
    println("**                                   **")
    println("**A Subtração de 5 menos 2 é " + (n2 - n1))
    println("**                                   **")
    println("**A Divisão de 5 por 5 é " + (n2 / n2))
    println("**                                   **")
    println("**A Multiplicação de 2 por 2 é " + (n1 * n1))
    println("**                                   **")
    println("**                                   **")
    println("**     CONTINUE CALCULANDO SEMPRE!     ")
    println("**                                   **")
    println("**                :)                 **")
    println("**                                   **")
    println("*************-------------*************")
    
}


}
//----------------------------------------------------------------------------------------------------------------
fun main() {

    //Condições 
    //
    //condição simples
    //
    // if --> se...
    // else --> senão...
    /*
    var lembreiDoChocolate = "Sim"
    
    if(lembreiDoChocolate == "Sim"){
        println("Vou entregar o chocolate para você")
    }else{
        println("Chocolate pra todo mundo!")
    }
    //se a condição for verdadeira, a sua ação será executada, senão, outra ação será
    //executada
    //Exercício --> Faça uma comparação, usando uma variável e o if...else, se essa
    //comparação for verdadeira, um resultado deverá ser impresso, senão, outro
    //será impresso 
    
    var Comunismo = "Poder"
    
    if(Comunismo == "Poder"){
        println("O proletáriado venceu")
    }else{
        println("Vai pra cuba")
    }
    
    //Condições Composta
    
    var coracoes = 1 
    
    if(coracoes >=5){
        println("Você está ótimo, que bom pra você!")
    }else if(coracoes == 4){
        println("Está bem, na medida do possível.")
    }else if(coracoes == 3){
        println("Ainda pode melhorar, e cuidado!")
    }else if(coracoes == 2){
        println("Provavelmente morre em 2 semanas.")
    }else if(coracoes == 1){
        println("Está podre, vai de vasco!")
    }else{
        println("F")
    }
    
    var idade = 18
    
    if(idade <= 3){
        println("Você é um nenê.")
    }else if(idade <= 12){
        println("Você é uma criança.")
    }else if(idade <=18){
        println("Já é jovem e sente a pressão do capital. Aproveite, porque piora.")
    }else if(idade <=60){
        println("Você é adulto e já é um proletário triste.")
    }else if(idade >=60){
        println("Espero que tenha conseguido se aposentar.")
    }else("Foi de berço ou nunca existiu.")
    */
    
    
    
    
}
//----------------------------------------------------------------------------------------------------------------
fun main() {
    
    //Operadoradores Lógicos
    //
    //São usados quando queremos comparar mais de uma coisa na mesma condição.
    //
    //&& -> e 
    //|| -> ou
    //
    //TABELA VERDADE (com e/ou)
    //
    //&& - A determinada ação só acontecerá se todas as condições forem verdadeiras, sem exceções.
    //
    //VV -> Verdadeiro
    //VF -> Falso
    //FV -> Falso
    //FF ->	Falso
    //
    // || - A determinada ação será executada se pelo menos uma das ações for verdadeira. 
    //
    //VV -> Verdadeiro
    //VF -> Verdadeiro
    //FV -> Verdadeiro
    //FF -> Falso
    //
    //Show do Garotos Podres
    /*
    var idade = 14
    var acompanhadoDosPais = false    
    
    
    if(idade >=14 || acompanhadoDosPais == true){
        println("Pode entrar, bom show.")
    }else{
        println("Não entra, pode ir embora.")
    }
    */

    //Exercício - A seleção brasileira está correndo risco de ser eliminada na fase de grupos
    //da copa, o Brasil só pode se classificar se a Alemanha perder e se o Brasil ganhar.
    //As partidas já passaram, quero saber se o Brasil se classificou ou não.
    
   /*
    var brasilVenceu = "Sim"
    var alemanhaVenceu = "Não"
    
    if(brasilVenceu == "Sim" && alemanhaVenceu == "Não"){
        println("O Brasil vence a partida e se classifica!")
        }else{
        println("O Brasil está eliminado...")
    }
   */ 
}
//----------------------------------------------------------------------------------------------------------------
fun main() {
    //Laços de Repetição
    //
    // while - enquanto
    // for - para
    // do..while - fazer enquanto
    // repeat - repetir
     
    //Laço while
    // enquanto determinada condição for verdadeira, outra ação será executada
    // 
    //Estrutura do while   
    //       
    // while(condição){
    // ação
    // }
    /* 
    var number = 0
    
    while(number <= 47){
        println(number)
        number++
    }
    //-------------------------------------------------------------------------------------------------------------
    */ 

    // Laço do..while
    // 
    // Uma determinada ação será executada enquanto outra determinada condição for verdadeira
    // 
    // Estrutura do do..while
    // do {
    // ação
    // } while(condição)
    /*
    var idade = 1
    
    do{
        println("$idade anos? Cresça.")
        idade++
    }while(idade > 17)
    */
    
    //Exercício -> O ano não é bissexto, portanto o ano possui 365 dias, precisa ser exibido no console
    //os números de 1 a 365
    /*
    var dia = 1
    
    while(dia <=365){
        println(dia)
        dia++
    }
    */
    //----------------------------------------------------------------------------------------------------------------
    fun main() {
    
    //Laços de repetição
    // While x 
    // Do..While x
    // 
    // for - para...
    // 
    // for - para cada item em uma lista ou qualquer tipo de coleção, será executado uma 
    // ação.
    // 
    // Estrutura do for:
    // for (item in list/collection/intervalo){
    // ação
    // }
    /*
    for(item in 1..10){
        println(item)   
    }
    

    //Exercício: faça uma tabuada de um número de sua escola (sem a do 0, a do 1, a do 2 e a do 10)
    //obs: precisa do laço for
    
    for(tabuadaCinco in 1..1){
        println(5*1)
        println(5*2)
        println(5*3)
        println(5*4)
        println(5*5)
        println(5*6)
        println(5*7)
        println(5*8)
        println(5*9)
        println(5*10)
        
    }
    */
    
    // Repeat - Repita...
    // 
    // uma ação será repetida por um detemrinado número de vezes  
    
   /*
    repeat(5){
        println("tartaruga")
    }
    */
}
    
*/
fun main() {
    
    //Collections
    //
    // <> -> tags - servem para especificar o tipo de valor a ser listado.
    //
    // São conjuntos de itens/valores que podem ser modelados e utilizados em determinados métodos e operações.
    // 
    //List
    //
    // listof -> listam itens de tipos variados.
    /*
    var genericList = mutableListOf("São Paulo, arroz e pamonha", 25.7f, 23.974, '$', false)
       println(genericList)
    
    var specificList = listOf<String>("Marxismo", "Leninismo", "Antifascismo")
       println(specificList)
    
//Index - uma posição da collection (0 conta)    
    
    //Propriedades - list
    //
    // .lastIndex
    // .size
    // .get
    //
    //println(specificList.lastIndex)
    //println(specificList.size)
    //println(specificList.get(1)) ou println(specificList[1])
   
   
    //Métodos listOf
    genericList.add(2, "oi") //Pode ou não ser expecificado em qual index o 'add' vai ser inserido com o número do index.
    println(genericList)
   
    
    genericList.removeAt(3)
    println(genericList)
    
    genericList.set(0, "tartaruga") //Serve para substituir, expecificando o Index e o novo valor.
    println(genericList)
    
    genericList.clear()
    println(genericList)
    */
    
    var anotherList = setOf("Engels", "Marx", "Lenin", "Stalin", "Che Guevara", "Mao Zedong")
       println(anotherList)
    
    var animal = mutableMapOf("tartaruga" to 0, "jabuti" to 1, "Tucano" to 2, "Hiena" to 3, "Macaco" to 4)
}
//------------------------------------------------------------------------------------------------
